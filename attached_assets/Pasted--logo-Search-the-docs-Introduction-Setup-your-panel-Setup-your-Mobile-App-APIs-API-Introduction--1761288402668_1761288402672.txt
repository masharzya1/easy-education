
 logo
Search the docs...
Introduction
Setup your panel
Setup your Mobile App
APIs
API Introduction
API Operation
Parameter Details
Integration
Sample Request
Verify Request
Checkout POPUP
Modules
WordPress Module
WHMCS Module
Modified SmmPanel Module
SmmPanel Module
Marketbob Module
Laravel Module
Welcome To RupantorPay Documentation
Last updated: 2025-02-06
RupantorPay is a simple and secure payment automation tool designed to use personal accounts as payment gateways, enabling you to accept payments from customers through your website. This documentation provides a complete overview of how RupantorPay works and how to integrate the RupantorPay API into your website.

Setup Your Panel
Checkpoint Tips:
For registration, visit: https://rupantorpay.com/sign-up
Complete the following process:
Setup your profile from Profile Settings
Buy a plan from Plans Page
Setup your brand from Brands Section
Setup payment methods from Wallet Settings
Your credentials:
API Key available at Brands Section
Setup Your Mobile App
Checkpoint Tips:
Download the mobile app: 
Complete the setup process:
Install the app with necessary permissions
Register a device from Devices Section
Copy the device key
Enter your email and device key in the mobile app
Grant SMS and Notification permissions to the app
API Introduction
The RupantorPay Payment Gateway enables merchants to receive payments from customers by temporarily redirecting them to RupantorPay.com. The gateway connects multiple payment terminals including card systems, mobile financial systems, and local/international wallets. After payment completion, customers are returned to the merchant's site, and the merchant receives payment notification with transaction details.

Note: This document is intended for technical personnel supporting merchant websites. Working knowledge of HTML forms or cURL is required.
API Operation
Our REST APIs support both GET and POST methods in two environments:

Sandbox: For testing purposes (use test credentials)
Live: For production processing (use live credentials)
POST GET Create Payment URL
https://payment.rupantorpay.com/api/payment/checkout

Endpoint for creating new payment requests

POST GET Verify Payment
https://payment.rupantorpay.com/api/payment/verify-payment

Endpoint for verifying completed transactions

Server Requirements: Your server must support cURL for API integration. For HTML Form submission, see the HTML Post method examples below.
Parameter Details
Payment Initialization Parameters - Required for POST requests to create payment URLs
Field Name	Description	Required	Example Values
fullname	Customer Full Name	Yes	John Doe
email	Customer Email Address	Yes	john@gmail.com
amount	Total payable amount (skip trailing zeros for whole numbers)	Yes	10 or 10.50 or 10.6
success_url	URL to redirect after successful payment	Yes	https://yourdomain.com/success.php
webhook_url	URL for server-to-server payment notifications	No	https://yourdomain.com/webhook.php
cancel_url	URL to redirect if payment is cancelled	Yes	https://yourdomain.com/cancel.php
meta_data	Additional JSON formatted data	No	{"order_id": "12345", "product": "Premium"}
Payment Verification Parameters - Required for GET requests to verify payments
Field Name	Description	Required	Example Values
transaction_id	Transaction ID received in success URL	Yes	OVKPXW165414
Headers Details
Header Name	Value
Content-Type	application/json
X-API-KEY	Your API key from Brands section
X-CLIENT	<?= $_SERVER['HTTP_HOST']; ?>
Checkout POPUP
Add This JS To Your Page:

<script src="https://rupantorpay.com/public/assets/js/checkout.js"></script>
  
<script> rupantorpayCheckOut(payment_url); </script>
  
Note: payment_url should be obtained from the payment API endpoint.

Integration Examples
Integrate our payment gateway into various platforms including PHP, Laravel, WordPress, WooCommerce, and more.

 cURL Example
For server-side integration using PHP cURL

 Verification
How to verify completed payments

Sample Request
PHP
PHP Guzzle
Javascript Node
Python
Native

const axios = require('axios');
let data = JSON.stringify({
  "success_url": "yourdomain.com/success",
  "cancel_url": "yourdomain.com/cancel",
  "webhook_url": "yourdomain.com/webhook",
  "metadata": {
    "phone": "016****"
  },
  "amount": "10"
});

let config = {
  method: 'post',
  maxBodyLength: Infinity,
  url: 'https://payment.rupantorpay.com/api/payment/checkout',
  headers: { 
    'X-API-KEY: API key From Brands',
    'Content-Type: application/json',
    'X-CLIENT: <?= $_SERVER["HTTP_HOST"]; ?>'
  },
  data: data
};

axios.request(config)
.then((response) => {
  //(JSON.stringify(response.data));
})
.catch((error) => {
  //(error);
});
      
Sample Response
Json

{
    "status": 1,
    "message": "Payment Link",
    "payment_url": "https://payment.rupantorpay.com/api/execute/b32174038622a436c132a893183a8f74"
}
      
Response Details
Success Response
status
bool
TRUE
message
String
Message for Status
payment_url
String
Payment Link (where customers will complete their payment)
Error Response
status
bool
FALSE
message
String
Message associated with the error response
Payment Completion Flow
After completing payment, customers will be redirected to success or cancel page with these query parameters:
yourdomain.com/(success/cancel)?
transactionId=******&
paymentMethod=***&
paymentAmount=**.**&
paymentFee=**.**&
currency=****&
status=PENDING|COMPLETED|ERROR
Returned Parameters (GET)
Parameters returned to your success/cancel URLs:

Param Name	Data Type	Description
transactionId	string (50)	Unique transaction identifier
paymentMethod	string (50)	Payment method used
paymentAmount	string (50)	Amount paid by customer
paymentFee	string (50)	Transaction fee deducted
currency	string (50)	Currency used for payment
status	string	Payment status (pending/success/failed)
Verify Request
PHP
PHP Guzzle
Javascript Node
Python
Native

<?php

$curl = curl_init();

curl_setopt_array($curl, array(
  CURLOPT_URL => 'https://payment.rupantorpay.com/api/payment/verify-payment',
  CURLOPT_RETURNTRANSFER => true,
  CURLOPT_ENCODING => '',
  CURLOPT_MAXREDIRS => 10,
  CURLOPT_TIMEOUT => 0,
  CURLOPT_FOLLOWLOCATION => true,
  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
  CURLOPT_CUSTOMREQUEST => 'POST',
  CURLOPT_POSTFIELDS =>'{"transaction_id":"ABCDEFH"}',
  CURLOPT_HTTPHEADER => array(
    'X-API-KEY: API key From Brands',
    'Content-Type: application/json'
  ),
));

$response = curl_exec($curl);

curl_close($curl);
echo $response;

?>
      
Sample Response
Json

{
    "fullname" => "John Doe",
    "email" => "john@gmail.com",
    "amount" => "900.000",
    "transaction_id" => "OVKPXW165414",
    "trx_id" => "7TRKHJH",
    "currency" => "BDT",
    "metadata" => {
        "phone" => "015****"
    },
    "payment_method" => "bkash",
    "status" => "COMPLETED"
}
      
📋
Response Details
✅
Success Response
status
string
COMPLETED or PENDING or ERROR
fullname
String
Customer Name
email
String
Customer Email
amount
String
Amount
transaction_id
String
Transaction id Generated by System
trx_id
String
Real Transaction id from Gateway
currency
String
currency from Gateway
metadata
json
Metadata used for Payment creation
❌
Error Response
status
bool
FALSE
message
String
Message associated with the error response
Ready-Made Modules
Integrate our payment gateway quickly with our pre-built modules for popular platforms.

Open Source Modules
Find additional integration modules and contribute to our open-source projects.

Composer Command
See documentation for composer installation:

📦 GitHub Repository rupantorpay/LaravelSDK

composer require rupantorpay/laravel-sdk
WordPress Module
Integrate our payment gateway into your WordPress website effortlessly. Works with e-commerce stores, membership sites, and donation platforms.

Installation Steps:
Log in to your WordPress admin panel
Go to Plugins > Add New
Search for "rupantorPay"
Install and activate the plugin
Configure with your API credentials
WHMCS Module
Seamlessly integrate with your WHMCS setup to accept payments, manage invoices, and track transactions.

Modified SMM Panel Module
Enhance your SMM panel with streamlined payment processing for social media marketing services.

SMM Panel Module
Standard integration module for SMM panels with payment processing capabilities.

Sketware SWB
Integration solution for Application platform with RupantorPay payment processing.

Active CMS
Integration solution for Application platform with RupantorPay payment processing.

Market BOB Module
Integration solution for Market BOB platform with RupantorPay payment processing.

Laravel Module
Composer package for Laravel applications with RupantorPay payment integration.

Copyright © rupantorpay

Updates
Support